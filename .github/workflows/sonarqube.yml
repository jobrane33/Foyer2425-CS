name: SonarQube analysis

on:
  push:
    branches: [ "main" ]  # Trigger for push to main
  pull_request:
    branches: [ "main" ]  # Trigger for PRs targeting main
  workflow_dispatch:

permissions:
  pull-requests: write  # Needed to comment on PRs

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set up Java 17
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      # Step 2: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 3: Run Maven build and SonarQube analysis without blocking on quality gate
      - name: Run Maven build and SonarQube analysis
        id: sonar
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=Foyer2425-CS \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN2 }} \
            -Dsonar.qualitygate.wait=false

      # Step 4: Check quality gate status using SonarQube API
      - name: Check SonarQube Quality Gate status
        id: qualitygate
        run: |
          SONAR_PROJECT_KEY="Foyer2425-CS"
          SONAR_API_URL="${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=${SONAR_PROJECT_KEY}"

          # Fetch the quality gate status
          QUALITY_GATE_STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN2 }}:" "${SONAR_API_URL}" | jq -r '.projectStatus.status')

          echo "Quality Gate Status: $QUALITY_GATE_STATUS"
          echo "::set-output name=status::$QUALITY_GATE_STATUS"

      # Step 5: Fail the workflow if the quality gate failed
      - name: Fail on Quality Gate Failure
        if: steps.qualitygate.outputs.status == 'ERROR'
        run: |
          echo "Quality Gate failed. Stopping the workflow."
          exit 1

      # Step 6: Comment on PR with the SonarQube report
      - name: Comment on PR with SonarQube report
        if: always()  # Run regardless of previous steps' outcomes
        run: |
          REPORT_URL="${{ secrets.SONAR_HOST_URL }}/dashboard?id=Foyer2425-CS"
          QUALITY_GATE_STATUS=$(echo "${{ steps.qualitygate.outputs.status }}" | tr '[:upper:]' '[:lower:]')
          
          if [[ "$QUALITY_GATE_STATUS" == "error" ]]; then
            PR_COMMENT="### :x: SonarQube Quality Gate Failed\nPlease review the [SonarQube report](${REPORT_URL}) for details."
          else
            PR_COMMENT="### :white_check_mark: SonarQube Quality Gate Passed\nYou can review the [SonarQube report](${REPORT_URL})."
          fi

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # For PR event, comment on the PR directly
            curl -s -X POST \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{\"body\":\"${PR_COMMENT}\"}" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
          fi
